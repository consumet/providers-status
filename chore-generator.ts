/*GENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.*/


import {ANIME, BOOKS, MANGA, COMICS, LIGHT_NOVELS, MOVIES, META} from '@consumet/extensions'
import fs from "fs"
import {performance} from "perf_hooks"

const start = async() => {
 let output = '| **provider** | **Status** | **Time** |\n|:--------:|:------:|:----:|\n'
 let t0, t1 = performance.now()
	const NineAnime = new ANIME.NineAnime()
 try {
	t0 = performance.now()
	 const NineAnimeRes = await NineAnime.search("One Piece")
	 t1 = performance.now()
	if (NineAnimeRes.results){
		 output += `|  [${NineAnime.name}](https://9anime.to)  | 游릭 200 | ${((t1 - t0) / 1000).toPrecision(3)}s |\n`
	}
	else {
		 output += `|  [${NineAnime.name}](https://9anime.to)  | 游댮 500 | ${((t1 - t0) / 1000).toPrecision(3)}s |\n`
	}
} catch (e) {
	 output += `| [${NineAnime.name}](https://9anime.to) | 游댮 500 | 0s |\n`
	}
	const AniMixPlay = new ANIME.AniMixPlay()
 try {
	t0 = performance.now()
	 const AniMixPlayRes = await AniMixPlay.search("One Piece")
	 t1 = performance.now()
	if (AniMixPlayRes.results){
		 output += `|  [${AniMixPlay.name}](https://animixplay.to)  | 游릭 200 | ${((t1 - t0) / 1000).toPrecision(3)}s |\n`
	}
	else {
		 output += `|  [${AniMixPlay.name}](https://animixplay.to)  | 游댮 500 | ${((t1 - t0) / 1000).toPrecision(3)}s |\n`
	}
} catch (e) {
	 output += `| [${AniMixPlay.name}](https://animixplay.to) | 游댮 500 | 0s |\n`
	}
	const AnimeFox = new ANIME.AnimeFox()
 try {
	t0 = performance.now()
	 const AnimeFoxRes = await AnimeFox.search("One Piece")
	 t1 = performance.now()
	if (AnimeFoxRes.results){
		 output += `|  [${AnimeFox.name}](https://animefox.tv)  | 游릭 200 | ${((t1 - t0) / 1000).toPrecision(3)}s |\n`
	}
	else {
		 output += `|  [${AnimeFox.name}](https://animefox.tv)  | 游댮 500 | ${((t1 - t0) / 1000).toPrecision(3)}s |\n`
	}
} catch (e) {
	 output += `| [${AnimeFox.name}](https://animefox.tv) | 游댮 500 | 0s |\n`
	}
	const AnimePahe = new ANIME.AnimePahe()
 try {
	t0 = performance.now()
	 const AnimePaheRes = await AnimePahe.search("One Piece")
	 t1 = performance.now()
	if (AnimePaheRes.results){
		 output += `|  [${AnimePahe.name}](https://animepahe.com)  | 游릭 200 | ${((t1 - t0) / 1000).toPrecision(3)}s |\n`
	}
	else {
		 output += `|  [${AnimePahe.name}](https://animepahe.com)  | 游댮 500 | ${((t1 - t0) / 1000).toPrecision(3)}s |\n`
	}
} catch (e) {
	 output += `| [${AnimePahe.name}](https://animepahe.com) | 游댮 500 | 0s |\n`
	}
	const Gogoanime = new ANIME.Gogoanime()
 try {
	t0 = performance.now()
	 const GogoanimeRes = await Gogoanime.search("One Piece")
	 t1 = performance.now()
	if (GogoanimeRes.results){
		 output += `|  [${Gogoanime.name}](https://gogoanime.gg)  | 游릭 200 | ${((t1 - t0) / 1000).toPrecision(3)}s |\n`
	}
	else {
		 output += `|  [${Gogoanime.name}](https://gogoanime.gg)  | 游댮 500 | ${((t1 - t0) / 1000).toPrecision(3)}s |\n`
	}
} catch (e) {
	 output += `| [${Gogoanime.name}](https://gogoanime.gg) | 游댮 500 | 0s |\n`
	}
	const Zoro = new ANIME.Zoro()
 try {
	t0 = performance.now()
	 const ZoroRes = await Zoro.search("One Piece")
	 t1 = performance.now()
	if (ZoroRes.results){
		 output += `|  [${Zoro.name}](https://zoro.to)  | 游릭 200 | ${((t1 - t0) / 1000).toPrecision(3)}s |\n`
	}
	else {
		 output += `|  [${Zoro.name}](https://zoro.to)  | 游댮 500 | ${((t1 - t0) / 1000).toPrecision(3)}s |\n`
	}
} catch (e) {
	 output += `| [${Zoro.name}](https://zoro.to) | 游댮 500 | 0s |\n`
	}
	const MangaDex = new MANGA.MangaDex()
 try {
	t0 = performance.now()
	 const MangaDexRes = await MangaDex.search("A")
	 t1 = performance.now()
	if (MangaDexRes.results){
		 output += `|  [${MangaDex.name}](https://mangadex.org)  | 游릭 200 | ${((t1 - t0) / 1000).toPrecision(3)}s |\n`
	}
	else {
		 output += `|  [${MangaDex.name}](https://mangadex.org)  | 游댮 500 | ${((t1 - t0) / 1000).toPrecision(3)}s |\n`
	}
} catch (e) {
	 output += `| [${MangaDex.name}](https://mangadex.org) | 游댮 500 | 0s |\n`
	}
	const MangaHere = new MANGA.MangaHere()
 try {
	t0 = performance.now()
	 const MangaHereRes = await MangaHere.search("A")
	 t1 = performance.now()
	if (MangaHereRes.results){
		 output += `|  [${MangaHere.name}](http://www.mangahere.cc)  | 游릭 200 | ${((t1 - t0) / 1000).toPrecision(3)}s |\n`
	}
	else {
		 output += `|  [${MangaHere.name}](http://www.mangahere.cc)  | 游댮 500 | ${((t1 - t0) / 1000).toPrecision(3)}s |\n`
	}
} catch (e) {
	 output += `| [${MangaHere.name}](http://www.mangahere.cc) | 游댮 500 | 0s |\n`
	}
	const MangaKakalot = new MANGA.MangaKakalot()
 try {
	t0 = performance.now()
	 const MangaKakalotRes = await MangaKakalot.search("A")
	 t1 = performance.now()
	if (MangaKakalotRes.results){
		 output += `|  [${MangaKakalot.name}](https://mangakakalot.com)  | 游릭 200 | ${((t1 - t0) / 1000).toPrecision(3)}s |\n`
	}
	else {
		 output += `|  [${MangaKakalot.name}](https://mangakakalot.com)  | 游댮 500 | ${((t1 - t0) / 1000).toPrecision(3)}s |\n`
	}
} catch (e) {
	 output += `| [${MangaKakalot.name}](https://mangakakalot.com) | 游댮 500 | 0s |\n`
	}
	const Libgen = new BOOKS.Libgen()
 try {
	t0 = performance.now()
	 const LibgenRes = await Libgen.search("One Hundred Years of Solitude")
	 t1 = performance.now()
	if (LibgenRes){
		 output += `| [${Libgen.name}](http://libgen)  | 游릭 200 | ${((t1 - t0) / 1000).toPrecision(3)}s |\n`
	}
	else {
		 output += `|  [${Libgen.name}](http://libgen)  | 游댮 500 | ${((t1 - t0) / 1000).toPrecision(3)}s |\n`
	}
} catch (e) {
	 output += `| [${Libgen.name}](http://libgen) | 游댮 500 | 0s |\n`
	}
	const GetComics = new COMICS.GetComics()
 try {
	t0 = performance.now()
	 const GetComicsRes = await GetComics.search("batman")
	 t1 = performance.now()
	if (GetComicsRes.containers){
		 output += `|  [${GetComics.name}](https://getcomics.info/)  | 游릭 200 | ${((t1 - t0) / 1000).toPrecision(3)}s |\n`
	}
	else {
		 output += `|  [${GetComics.name}](https://getcomics.info/)  | 游댮 500 | ${((t1 - t0) / 1000).toPrecision(3)}s |\n`
	}
} catch (e) {
	 output += `| [${GetComics.name}](https://getcomics.info/) | 游댮 500 | 0s |\n`
	}
	const ReadLightNovels = new LIGHT_NOVELS.ReadLightNovels()
 try {
	t0 = performance.now()
	 const ReadLightNovelsRes = await ReadLightNovels.search("classroom of the elite")
	 t1 = performance.now()
	if (ReadLightNovelsRes.results){
		 output += `|  [${ReadLightNovels.name}](https://readlightnovels.net)  | 游릭 200 | ${((t1 - t0) / 1000).toPrecision(3)}s |\n`
	}
	else {
		 output += `|  [${ReadLightNovels.name}](https://readlightnovels.net)  | 游댮 500 | ${((t1 - t0) / 1000).toPrecision(3)}s |\n`
	}
} catch (e) {
	 output += `| [${ReadLightNovels.name}](https://readlightnovels.net) | 游댮 500 | 0s |\n`
	}
	const FlixHQ = new MOVIES.FlixHQ()
 try {
	t0 = performance.now()
	 const FlixHQRes = await FlixHQ.search("batman")
	 t1 = performance.now()
	if (FlixHQRes.results){
		 output += `|  [${FlixHQ.name}](https://flixhq.to)  | 游릭 200 | ${((t1 - t0) / 1000).toPrecision(3)}s |\n`
	}
	else {
		 output += `|  [${FlixHQ.name}](https://flixhq.to)  | 游댮 500 | ${((t1 - t0) / 1000).toPrecision(3)}s |\n`
	}
} catch (e) {
	 output += `| [${FlixHQ.name}](https://flixhq.to) | 游댮 500 | 0s |\n`
	}
	const Anilist = new META.Anilist()
 try {
	t0 = performance.now()
	 const AnilistRes = await Anilist.search("A")
	 t1 = performance.now()
	if (AnilistRes.results){
		 output += `|  [${Anilist.name}](https://anilist.co/)  | 游릭 200 | ${((t1 - t0) / 1000).toPrecision(3)}s |\n`
	}
	else {
		 output += `|  [${Anilist.name}](https://anilist.co/)  | 游댮 500 | ${((t1 - t0) / 1000).toPrecision(3)}s |\n`
	}
} catch (e) {
	 output += `| [${Anilist.name}](https://anilist.co/) | 游댮 500 | 0s |\n`
	}
fs.writeFileSync('./README.md', output)}



start()